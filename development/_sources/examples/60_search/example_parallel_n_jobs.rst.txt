.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_60_search_example_parallel_n_jobs.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_60_search_example_parallel_n_jobs.py:


===================================
Parallel Usage  on a single machine
===================================

*Auto-sklearn* uses
`dask.distributed <https://distributed.dask.org/en/latest/index.html`>_
for parallel optimization.

This example shows how to start *Auto-sklearn* to use multiple cores on a
single machine. Using this mode, *Auto-sklearn* starts a dask cluster,
manages the workers and takes care of shutting down the cluster once the
computation is done.
To run *Auto-sklearn* on multiple machines check the example
`Parallel Usage with manual process spawning <example_parallel_manual_spawning.html>`_.


.. code-block:: default


    import sklearn.model_selection
    import sklearn.datasets
    import sklearn.metrics

    import autosklearn.classification









Data Loading
============


.. code-block:: default

    X, y = sklearn.datasets.load_breast_cancer(return_X_y=True)
    X_train, X_test, y_train, y_test = \
        sklearn.model_selection.train_test_split(X, y, random_state=1)








Build and fit a classifier
==========================

To use ``n_jobs_`` we must guard the code


.. code-block:: default

    if __name__ == '__main__':

        automl = autosklearn.classification.AutoSklearnClassifier(
            time_left_for_this_task=120,
            per_run_time_limit=30,
            tmp_folder='/tmp/autosklearn_parallel_1_example_tmp',
            output_folder='/tmp/autosklearn_parallel_1_example_out',
            n_jobs=4,
            # Each one of the 4 jobs is allocated 3GB
            memory_limit=3072,
            seed=5,
        )
        automl.fit(X_train, y_train, dataset_name='breast_cancer')

        # Print statistics about the auto-sklearn run such as number of
        # iterations, number of models failed with a time out.
        print(automl.sprint_statistics())




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [WARNING] [2020-12-16 15:57:08,481:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance cifar_10
    [WARNING] [2020-12-16 15:57:08,487:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance gtsrb-hog03
    [WARNING] [2020-12-16 15:57:08,491:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance kuzushiji-49
    [WARNING] [2020-12-16 15:57:08,501:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance svhn
    [WARNING] [2020-12-16 15:57:08,592:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance cifar_10
    [WARNING] [2020-12-16 15:57:08,592:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance svhn
    [WARNING] [2020-12-16 15:57:08,593:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance gtsrb-hog03
    [WARNING] [2020-12-16 15:57:08,593:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance kuzushiji-49
    auto-sklearn results:
      Dataset name: breast_cancer
      Metric: accuracy
      Best validation score: 0.985816
      Number of target algorithm runs: 31
      Number of successful target algorithm runs: 28
      Number of crashed target algorithm runs: 2
      Number of target algorithms that exceeded the time limit: 1
      Number of target algorithms that exceeded the memory limit: 0






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  59.308 seconds)


.. _sphx_glr_download_examples_60_search_example_parallel_n_jobs.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_parallel_n_jobs.py <example_parallel_n_jobs.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_parallel_n_jobs.ipynb <example_parallel_n_jobs.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_20_basic_example_regression.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_examples_20_basic_example_regression.py:


==========
Regression
==========

The following example shows how to fit a simple regression model with
*auto-sklearn*.




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.8.6/x64/lib/python3.8/site-packages/pyparsing.py:3190: FutureWarning: Possible set intersection at position 3
      self.re = re.compile(self.reString)
    [WARNING] [2020-12-16 15:39:26,474:autosklearn.metalearning.metalearning.meta_base] Dataset boston already in meta-data. Removing occurence.
    [WARNING] [2020-12-16 15:39:26,505:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance aloi
    [WARNING] [2020-12-16 15:39:26,509:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance flora
    [WARNING] [2020-12-16 15:39:26,514:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-100852
    [WARNING] [2020-12-16 15:39:26,515:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-10475
    [WARNING] [2020-12-16 15:39:26,515:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-10502
    [WARNING] [2020-12-16 15:39:26,515:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-10809
    [WARNING] [2020-12-16 15:39:26,516:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-10980
    [WARNING] [2020-12-16 15:39:26,516:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-11
    [WARNING] [2020-12-16 15:39:26,517:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-11626
    [WARNING] [2020-12-16 15:39:26,517:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-12569
    [WARNING] [2020-12-16 15:39:26,518:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-12947
    [WARNING] [2020-12-16 15:39:26,518:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-12968
    [WARNING] [2020-12-16 15:39:26,518:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-163
    [WARNING] [2020-12-16 15:39:26,519:autosklearn.metalearning.optimizers.metalearn_optimizer.metalearner] Could not find runs for instance qsar-tid-72
    [WARNING] [2020-12-16 15:39:26,570:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-11
    [WARNING] [2020-12-16 15:39:26,571:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-10980
    [WARNING] [2020-12-16 15:39:26,571:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-72
    [WARNING] [2020-12-16 15:39:26,571:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-163
    [WARNING] [2020-12-16 15:39:26,571:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-10502
    [WARNING] [2020-12-16 15:39:26,571:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-12947
    [WARNING] [2020-12-16 15:39:26,571:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-10475
    [WARNING] [2020-12-16 15:39:26,571:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-12569
    [WARNING] [2020-12-16 15:39:26,571:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-100852
    [WARNING] [2020-12-16 15:39:26,572:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-12968
    [WARNING] [2020-12-16 15:39:26,572:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-10809
    [WARNING] [2020-12-16 15:39:26,572:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance qsar-tid-11626
    [WARNING] [2020-12-16 15:39:26,572:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance aloi
    [WARNING] [2020-12-16 15:39:26,572:autosklearn.metalearning.metalearning.kNearestDatasets.kND] Found no best configuration for instance flora
    [(0.640000, SimpleRegressionPipeline({'data_preprocessing:categorical_transformer:categorical_encoding:__choice__': 'one_hot_encoding', 'data_preprocessing:categorical_transformer:category_coalescence:__choice__': 'minority_coalescer', 'data_preprocessing:numerical_transformer:imputation:strategy': 'mean', 'data_preprocessing:numerical_transformer:rescaling:__choice__': 'standardize', 'feature_preprocessor:__choice__': 'no_preprocessing', 'regressor:__choice__': 'random_forest', 'data_preprocessing:categorical_transformer:category_coalescence:minority_coalescer:minimum_fraction': 0.01, 'regressor:random_forest:bootstrap': 'True', 'regressor:random_forest:criterion': 'mse', 'regressor:random_forest:max_depth': 'None', 'regressor:random_forest:max_features': 1.0, 'regressor:random_forest:max_leaf_nodes': 'None', 'regressor:random_forest:min_impurity_decrease': 0.0, 'regressor:random_forest:min_samples_leaf': 1, 'regressor:random_forest:min_samples_split': 2, 'regressor:random_forest:min_weight_fraction_leaf': 0.0},
    dataset_properties={
      'task': 4,
      'sparse': False,
      'multioutput': False,
      'target_type': 'regression',
      'signed': False})),
    (0.200000, SimpleRegressionPipeline({'data_preprocessing:categorical_transformer:categorical_encoding:__choice__': 'one_hot_encoding', 'data_preprocessing:categorical_transformer:category_coalescence:__choice__': 'no_coalescense', 'data_preprocessing:numerical_transformer:imputation:strategy': 'most_frequent', 'data_preprocessing:numerical_transformer:rescaling:__choice__': 'minmax', 'feature_preprocessor:__choice__': 'polynomial', 'regressor:__choice__': 'gaussian_process', 'feature_preprocessor:polynomial:degree': 2, 'feature_preprocessor:polynomial:include_bias': 'True', 'feature_preprocessor:polynomial:interaction_only': 'True', 'regressor:gaussian_process:alpha': 0.037731974209709904, 'regressor:gaussian_process:thetaL': 5.002213042554931e-07, 'regressor:gaussian_process:thetaU': 22409.945864393645},
    dataset_properties={
      'task': 4,
      'sparse': False,
      'multioutput': False,
      'target_type': 'regression',
      'signed': False})),
    (0.160000, SimpleRegressionPipeline({'data_preprocessing:categorical_transformer:categorical_encoding:__choice__': 'one_hot_encoding', 'data_preprocessing:categorical_transformer:category_coalescence:__choice__': 'no_coalescense', 'data_preprocessing:numerical_transformer:imputation:strategy': 'most_frequent', 'data_preprocessing:numerical_transformer:rescaling:__choice__': 'standardize', 'feature_preprocessor:__choice__': 'polynomial', 'regressor:__choice__': 'ard_regression', 'feature_preprocessor:polynomial:degree': 2, 'feature_preprocessor:polynomial:include_bias': 'True', 'feature_preprocessor:polynomial:interaction_only': 'False', 'regressor:ard_regression:alpha_1': 0.0003701926442639788, 'regressor:ard_regression:alpha_2': 2.2118001735899097e-07, 'regressor:ard_regression:fit_intercept': 'True', 'regressor:ard_regression:lambda_1': 1.2037591637980971e-06, 'regressor:ard_regression:lambda_2': 4.358378124977852e-09, 'regressor:ard_regression:n_iter': 300, 'regressor:ard_regression:threshold_lambda': 1136.5286041327277, 'regressor:ard_regression:tol': 0.021944240404849075},
    dataset_properties={
      'task': 4,
      'sparse': False,
      'multioutput': False,
      'target_type': 'regression',
      'signed': False})),
    ]
    R2 score: 0.9040477219435149






|


.. code-block:: default

    import sklearn.datasets
    import sklearn.metrics

    import autosklearn.regression


    if __name__ == "__main__":
        ############################################################################
        # Data Loading
        # ============

        X, y = sklearn.datasets.load_boston(return_X_y=True)

        X_train, X_test, y_train, y_test = \
            sklearn.model_selection.train_test_split(X, y, random_state=1)

        ############################################################################
        # Build and fit a regressor
        # =========================

        automl = autosklearn.regression.AutoSklearnRegressor(
            time_left_for_this_task=120,
            per_run_time_limit=30,
            tmp_folder='/tmp/autosklearn_regression_example_tmp',
            output_folder='/tmp/autosklearn_regression_example_out',
        )
        automl.fit(X_train, y_train, dataset_name='boston')

        ############################################################################
        # Print the final ensemble constructed by auto-sklearn
        # ====================================================

        print(automl.show_models())

        ###########################################################################
        # Get the Score of the final ensemble
        # ===================================

        predictions = automl.predict(X_test)
        print("R2 score:", sklearn.metrics.r2_score(y_test, predictions))


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  57.803 seconds)


.. _sphx_glr_download_examples_20_basic_example_regression.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: example_regression.py <example_regression.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: example_regression.ipynb <example_regression.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
